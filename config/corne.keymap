/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp MINUS>, <&tog 4>;
        };
    };
    keymap {
    compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 2 DELETE  &kp Q  &kp W        &kp E       &lt 2 R     &kp T      &kp Y          &lt 2 U     &kp I       &kp O        &kp P     &td0
&lt 1 ESCAPE  &kp A  &mt LCTRL S  &mt LALT D  &mt LGUI F  &kp G      &kp H          &mt LGUI J  &mt RALT K  &mt RCTRL L  &kp SEMI  &lt 1 SQT
&kp LSHFT     &kp Z  &kp X        &kp C       &lt 1 V     &kp B      &kp N          &lt 1 M     &kp COMMA   &kp DOT &kp FSLH  &kp RSHIFT
                                  &mo 3       &kp RET     &kp TAB    &kp BACKSPACE  &kp SPACE   &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp F1          &kp F2        &kp F3        &kp F4        &kp F5          &trans  &kp F7    &kp UP_ARROW  &kp F8     &kp F9         &kp BSPC
&trans     &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PG_UP      &trans
&kp BT_NXT  &bt BT_CLR_ALL  &trans        &trans        &trans        &trans          &trans  &trans    &trans        &trans     &kp PAGE_DOWN  &trans
                                         &trans        &trans        &trans          &trans  &trans    &trans
            >;
        };
        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans    &kp CARET        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans    &kp BSPC
&trans     &trans  &trans  &trans  &kp LALT &trans    &kp MINUS        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PIPE  &kp TILDE
                           &trans  &trans  &trans    &trans           &kp LS(LALT)         &kp KP_NUMBER_0
            >;
        };

        SYMBOLS {
            bindings = <
&kp LS(RG(NUMBER_4)) &kp EXCL      &kp AT_SIGN  &kp HASH       &kp DOLLAR    &trans    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp PERCENT   &kp CARET    &kp AMPERSAND  &kp ASTERISK  &trans    &trans  &trans            &trans             &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &kp KP_EQUAL  &kp PIPE     &kp PLUS       &kp KP_MINUS  &trans    &trans  &trans            &trans             &kp LESS_THAN         &kp GREATER_THAN       &trans
                                   &trans         &trans        &trans    &trans  &trans            &trans
            >;
        };

        LH_ARROWS {    
            bindings = <
&kp ESC       &kp Q          &kp W &kp E         &kp R     &kp T  &kp Y &kp U &kp I     &kp O      &kp P     &kp Q
&kp LALT      &kp A  &kp S &kp D &kp F     &kp G  &kp H &kp J &kp K     &kp L      &kp SEMI  &trans
&kp LSHIFT    &kp Z          &kp X         &kp C         &kp V     &kp B  &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp RSHIFT
                                       &kp LCTRL     &kp SPACE &kp TAB &kp BSPC &kp SPC &kp 
            >;
        };
    };
};
